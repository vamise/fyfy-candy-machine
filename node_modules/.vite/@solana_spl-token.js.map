{
  "version": 3,
  "sources": ["dep:@solana_spl-token", "../@babel/runtime/helpers/esm/defineProperty.js", "../@solana/spl-token/node_modules/base64-js/index.js", "../@solana/spl-token/node_modules/ieee754/index.js", "../@solana/spl-token/node_modules/buffer/index.js", "../@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/global.js", "../@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js", "../@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/util.js", "../@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/assert.js", "../@solana/spl-token/node_modules/buffer-layout/lib/Layout.js", "../@solana/spl-token/client/layout.js", "../@solana/spl-token/client/util/send-and-confirm-transaction.js", "../@solana/spl-token/client/token.js"],
  "sourcesContent": ["\nexport * from \"./node_modules/@solana/spl-token/lib/index.browser.esm.js\"", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});", "\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n", "\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n", "/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n", "// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n", "// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n", "/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
